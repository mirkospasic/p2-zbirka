
Osnovna datoteka je
zbirka.tex
Ona samo ukljucuje potrebne datoteke. Nju latexujete da biste dobili .pdf

zbirka.bib se odnosi na literaturu, mozda ce nam trebati

Dalje, imamo tri poddirektorijuma

1. Direktorijum podesavanja sadrzi tri .tex:
stil_strane.tex --- sluzi za podesavanje izlgeda dokumenta
definisane_komande.tex --- ovde su definisana razna okruzenja koja cemo koristiti
paketi.tex --- ukljucivanje potrebnih paketa u dokument

2. Direktorijum resenja sadrzi poddirektorijume za .c fajlove za svako 
poglavlje (tj Mirko nije kreirao sve poddirektorijume, to cemo vec dodati).
Predlazem sledecu konvenciju imenovanja resenja: trocifreni brojevi pri cemu 
prva cifra oznacava oblast kojoj zadatak pripada (npr 1 za rekurziju, 2 za 
bitove, 3 za pokazivace...). Iako znam da ce se redosled zadataka menjati i da 
je to neminovno, ovo mi ipak deluje kao najjednostavnija i najurednija ideja. 
Ako neko ima bolju ideju, neka javi.

3. Direktorijum poglavlja sadrzi vise .tex datoteka, tj za svaku oblast po 
jednu, plus posebnu .tex datoteku za naslovnu stranu i za predgovor
Svako ce, u skladu sa svojom oblascu, menjati ove fajlove.

Najpre bih sve zamolila da koriste nasa slova, tj š, č, ć, đ, ž a ne one 
kuke tj \v{s} i slicno koje cine tekst u tex formatu tesko citljivim. Nadam se 
da to nije nikome problem, sa sa find-replace se moze sve lako srediti ukoliko 
u tekucim verzijama imate ovu zastarelu varijantu.

Svaki zadatak pisete na sledeci nacin --- primer iz drugog poglavlja:

\begin{Exercise}[label=201]
Napisati funkciju \kckod{int Broj01(unsigned int n)} koja za dati broj 
\argf{n} vraća \argf{1} ako u njegovom binarnom zapisu ima više jednica nego 
nula, a inače vraća \argf{0}.  Napisati program koji tu funkciju testira za 
broj koji se zadaje sa standardnog ulaza.

\begin{minitest}
\begin{test}{Test 1}
Ulaz:   10
Izlaz:  0 
\end{test}
\end{minitest}
\begin{minitest}
\begin{test}{Test 2}
Ulaz:   1024
Izlaz:  0 
\end{test}
\end{minitest}
\begin{minitest}
\begin{test}{Test 3}
Ulaz:   2147377146
Izlaz:  1 
\end{test}
\end{minitest}

\begin{minitest}
\begin{test}{Test 4}
Ulaz:   1111111115
Izlaz:  0 
\end{test}
\end{minitest}


\end{Exercise}
\begin{Answer}[ref=201]
\includecode{resenja/02_Bitovi/201.c}
\end{Answer}


Okruzenje Exercise treba da obuhvati tekst zadatka, tj izmedju \begin{Exercise} 
i \end{Exercise}.
Labela treba da bude jedinstvena, predlazem da i to budu redom brojevi, gde 
prvi broj odgovara broju poglavlja. Labela i ref omogucavaju da se sa resenja 
klikne i vrati na zadatak.

Postoje i druge stvari koje mogu sa se navedu u okviru uglastih zagrada (npr 
da se naznaci da je zadatak tezi, pa da se na osnovu toga generise zvezdica i 
takve neke stvari, ali otom potom). Koga intresuje vise ovo okruzenje, moze 
detalja da pogleda na
http://ctan.mirror.ac.za/macros/latex/contrib/exercise/exercise.pdf

\kckod je komanda koju sam ja definisala i koja je skracenica od KratakCKod. 
Trenutno je to definisano kao najobicniji texttt, ali ukoliko budemo zeleli to 
da menjamo ili podesavamo, ovako je najzgodnije. 

n, 1 i 0 su u okviru komande \argf (skraceno od argument funkcije).

Test primeri su u okruzenju test. Tu se jos navodi u okviru {} ime testa, tj 
rec Test i redni broj. Okruzenje test je u okviru okruzenja minitest. Pokusala 
sam da to objedinim ali nazalost tako nesto nije moguce, pa mora duplo da se 
kuca. Minitest je zapravo zamena za minipage sa predefinisanom sirinom. 
Definisala sam i miditest i maxitest, u zavisnosti od sirine koja je za test 
potrebna. Ideja je da testove mozemo da slazemo jedan uz drugi, kao i da svi 
koristimo fiksne duzine, zato sam navela ove tri velicine, mada je to, naravno, 
fleksibilno,   

Okruzenje Answer se koristi samo da se oznaci rešenje zadatka, i tu imamo 
uključivanje C koda iz odgovarajuće datoteke rešenja. Dakle taj deo bi trebao 
da je uvek isti, sem sto se ref i ime datoteke koja se ubacuje razlikuju. 
Koristi se \includecode komanda za ubacivanje.


1) Zadatke koji se testiraju konstantama bih preformulisala u 
zadatke koji se testiraju vrednostima koje se unose sa standardnog ulaza.
2) Zadatke koji se sastoje iz vise delova bih formulisala nalik na prva 
dva zadatka kod visedimenzionih nizova ili bih razdvojila u vise manjih 
zadataka, ukoliko je to negde prirodnije. 
Naime, Filip me je naucio da su njega lektori naucili da nabrajanje ne sme 
da narusava strukturu recenice i da je naredno nabrajanje oblika:

Napisati:
a) funkciju koja .... i na kraju tacka.
b) funkciju koja .... i na kraju tacka.
c) funkciju koja .... i na kraju tacka.

nije ispravno jer ne moze jedna recenica da se nastavlja na tri mesta. 
U skladu sa time, drzala bih se formulacija koje su u skladu sa 
pravilima srpskog jezika (primere takvih formulacija videcete kod pokazivaca
i visedimenzionih nizova).

Nekim tezim zadacima mozemo dodati zvezdice na ovaj nacin:
\begin{Exercise}[title={Sortiranje}, difficulty=2, label=401]
Ovde je dodato i ime zadatku, ako negde bude i tako nesto potrebno.

Uputstva za unos resenja

> 1. Kada unosim resenja zadataka sa vezbi, da li da unosim i sve (detaljne)
> komentare koji tamo stoje ili ne? Ako da, onda bi te komentare trebalo
> detaljno preformulisati ali bi to zahtevalo zaista puno vremena.

Uzmes zadatak sa vezbi, sredis da je kod u skladu sa zadatkom, sredis mu komentare, testiras resenje da je dobro. Komentari moraju da postoje, u kojoj meri, to je vec stvar ukusa, izbaci sta mislis da treba, ubaci sta mislis da nedostaje.

Formatiranje resenja se radi alatom indent:
indent -fc1 -fca -kr --no-tabs --line-length65 -i2 *.c
-fc1 -fca - Formatiraj i komentare
-kr - Formatiranje kao u knjizi Kernighan&Ritchie
--no-tabs - Umesto TAB-ova koristimo space-ove (zbog PDF-a)
--line-length65 - maksimalna duzina linije je 65 (zbog PDF-a)
-i2 - Podrazumevano uvlacenje je 2 blanko karaktera

> 3. Da li da ogranicavamo duzinu reda na neki odredjeni broj karaktera ili
> ne? Ovo pitanje se odnosi i na komentare i na kod.

Odgovor na ovo je isti kao prethodni - da moracemo da se ogranicimo, ali mislim da ce to moci automatski da se uradi. A mozda i nece (tj hoce sigurno, ali ako se radi automatski pitanje je koliko lepo ce da izgleda), pa nije lose u startu voditi racuna da se ne prelazi 80 karaktera u redu. 
